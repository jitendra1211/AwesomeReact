{"version":3,"sources":["components/redux/dishesReducer.js","components/redux/ActionTypes.js","components/redux/commentsReducer.js","components/redux/promotionsReducer.js","components/redux/leadersReducer.js","components/redux/forms.js","components/HeaderComponent.js","components/FooterComponent.js","components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/AboutComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/DishDetailedComponent.js","components/redux/ActionCreaters.js","components/MainComponent.js","App.js","components/redux/configureStore.js","serviceWorker.js","index.js"],"names":["Dishes","state","isLoading","errMess","dishes","action","type","payload","Comments","comments","comment","concat","Promotions","promotions","Leaders","leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","message","Header","props","toggleNav","bind","isNavOpen","isModalOpen","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","className","onClick","href","src","height","width","alt","isOpen","navbar","NavLink","to","outline","toggle","onSubmit","htmlFor","id","name","innerRef","input","check","color","Component","Footer","Link","Loading","baseUrl","RenderCard","item","in","transformProps","exitTransform","image","title","designation","description","Home","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","RenderLeader","key","tag","left","top","object","body","heading","leaderslist","map","Fragment","list","About","active","RenderMenuItem","Menu","menu","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","postFeedback","resetFeedbackForm","role","model","md","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","RenderDish","RenderComments","postComment","dishId","commentlist","date","Date","parse","console","log","toString","author","Intl","DateTimeFormat","year","month","day","format","DishDetailed","CommentForm","rating","dishesFailed","addDishes","commentsFailed","errmess","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","Switch","Route","path","component","filter","featured","dishErrMess","promo","exact","match","parseInt","params","commentsErrMess","Redirect","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","actions","reset","feedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","BrowserRouter","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sSAEaA,EAAS,WAGS,IAHRC,EAGO,uDAHC,CAC3BC,WAAY,EACZC,QAAU,KACVC,OAAS,IAAMC,EAAW,uCAC1B,OAAQA,EAAOC,MACX,ICJgB,aDKZ,OAAO,2BAAIL,GAAX,IAAkBC,WAAW,EAAOC,QAAS,KAAMC,OAAQC,EAAOE,UACtE,ICRoB,iBDShB,OAAO,2BAAIN,GAAX,IAAkBC,WAAW,EAAMC,QAAS,KAAMC,OAAQ,KAC9D,ICTmB,gBDUf,OAAO,2BAAIH,GAAX,IAAkBC,WAAW,EAAOC,QAASE,EAAOE,UACxD,QACE,OAAON,IEZJO,EAAW,WAAoD,IAAnDP,EAAkD,uDAA1C,CAAEE,QAAS,KAAMM,SAAS,IAAKJ,EAAW,uCACzE,OAAQA,EAAOC,MACb,IDAwB,eCCtB,OAAO,2BAAIL,GAAX,IAAkBE,QAAS,KAAMM,SAAUJ,EAAOE,UAEpD,IDF2B,kBCGzB,OAAO,2BAAIN,GAAX,IAAkBE,QAASE,EAAOE,UAEpC,IDVsB,cCWlB,IAAIG,EAAUL,EAAOE,QACrB,OAAO,2BAAKN,GAAZ,IAAmBQ,SAAUR,EAAMQ,SAASE,OAAOD,KAEvD,QACE,OAAOT,ICbAW,EAAa,WAE0C,IAFzCX,EAEwC,uDAF/B,CAAEC,WAAW,EACTC,QAAS,KACTU,WAAW,IAAKR,EAAW,uCAC/D,OAAQA,EAAOC,MACX,IFCkB,aEAd,OAAO,2BAAIL,GAAX,IAAkBC,WAAW,EAAOC,QAAS,KAAMU,WAAYR,EAAOE,UAE1E,IFHsB,iBEIlB,OAAO,2BAAIN,GAAX,IAAkBC,WAAW,EAAMC,QAAS,KAAMU,WAAY,KAElE,IFJqB,gBEKjB,OAAO,2BAAIZ,GAAX,IAAkBC,WAAW,EAAOC,QAASE,EAAOE,UAExD,QACE,OAAON,ICdJa,EAAU,WAE0C,IAFzCb,EAEwC,uDAF/B,CAAEC,WAAW,EACNC,QAAS,KACTY,QAAQ,IAAKV,EAAW,uCAC5D,OAAQA,EAAOC,MACX,IHImB,cGHf,OAAO,2BAAIL,GAAX,IAAkBC,WAAW,EAAOC,QAAS,KAAMY,QAASV,EAAOE,UAEvE,IHAuB,kBGCnB,OAAO,2BAAIN,GAAX,IAAkBC,WAAW,EAAMC,QAAS,KAAMY,QAAS,KAE/D,IHDsB,iBGElB,OAAO,2BAAId,GAAX,IAAkBC,WAAW,EAAOC,QAASE,EAAOE,UAExD,QACE,OAAON,I,OChBJe,EAAkB,CAC3BC,UAAW,GACXC,SAAU,GACVC,OAAQ,GACRC,MAAO,GACPC,OAAO,EACPC,YAAa,OACbC,QAAS,I,2DCsGEC,E,kDAtGX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAK1B,MAAQ,CACX2B,WAAW,EACXC,aAAa,GAEf,EAAKC,YAAc,EAAKA,YAAYH,KAAjB,gBACnB,EAAKI,YAAc,EAAKA,YAAYJ,KAAjB,gBATJ,E,wDAafK,KAAKC,SAAS,CACZL,WAAYI,KAAK/B,MAAM2B,c,oCAIzBI,KAAKC,SAAS,CACZJ,aAAcG,KAAK/B,MAAM4B,gB,kCAGjBK,GACVF,KAAKF,cACLK,MAAM,aAAeH,KAAKI,SAASC,MAAQ,cAAgBL,KAAKM,SAASD,MACnE,cAAgBL,KAAKO,SAASC,SACpCN,EAAMO,mB,+BAID,IAAD,OACJ,OACI,6BACA,kBAAC,IAAD,CAAQC,MAAI,EAACC,OAAO,MAChB,yBAAKC,UAAU,aACX,kBAAC,IAAD,CAAeC,QAASb,KAAKN,YAC7B,kBAAC,IAAD,CAAakB,UAAU,UAAUE,KAAK,KAAI,yBAAKC,IAAI,yBAAyBC,OAAO,KAAKC,MAAM,KAAKC,IAAI,2BACvG,kBAAC,IAAD,CAAUC,OAAQnB,KAAK/B,MAAM2B,UAAWwB,QAAM,GAC1C,kBAAC,IAAD,CAAKA,QAAM,GACX,kBAAC,IAAD,KACI,kBAACC,EAAA,EAAD,CAAST,UAAU,WAAYU,GAAG,SAAQ,0BAAMV,UAAU,qBAA1D,UAEJ,kBAAC,IAAD,KACI,kBAACS,EAAA,EAAD,CAAST,UAAU,WAAWU,GAAG,YAAW,0BAAMV,UAAU,qBAA5D,cAEJ,kBAAC,IAAD,KACI,kBAACS,EAAA,EAAD,CAAST,UAAU,WAAYU,GAAG,SAAQ,0BAAMV,UAAU,qBAA1D,UAEJ,kBAAC,IAAD,KACI,kBAACS,EAAA,EAAD,CAAST,UAAU,WAAWU,GAAG,cAAa,0BAAMV,UAAU,6BAA9D,iBAGJ,kBAAC,IAAD,CAAKA,UAAU,UAAUQ,QAAM,GAC3B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQG,SAAO,EAACV,QAASb,KAAKF,aAAa,0BAAMc,UAAU,wBAA3D,eAQpB,kBAAC,IAAD,KACI,yBAAKA,UAAU,aACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,mBACX,qDACA,yLAKhB,kBAAC,IAAD,CAAOO,OAAQnB,KAAK/B,MAAM4B,YAAa2B,OAAQxB,KAAKF,aAC5C,kBAAC,IAAD,CAAa0B,OAAQxB,KAAKF,aAA1B,SACA,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAM2B,SAAUzB,KAAKD,aACb,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO2B,QAAQ,YAAf,YACA,kBAAC,IAAD,CAAOpD,KAAK,OAAOqD,GAAG,WAAWC,KAAK,WAClCC,SAAU,SAACC,GAAD,OAAW,EAAK1B,SAAW0B,MAE7C,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOJ,QAAQ,YAAf,YACA,kBAAC,IAAD,CAAOpD,KAAK,WAAWqD,GAAG,WAAWC,KAAK,WACtCC,SAAU,SAACC,GAAD,OAAW,EAAKxB,SAAWwB,MAE7C,kBAAC,IAAD,CAAWC,OAAK,GACZ,kBAAC,IAAD,CAAOA,OAAK,GACR,kBAAC,IAAD,CAAOzD,KAAK,WAAWsD,KAAK,WAC5BC,SAAU,SAACC,GAAD,OAAW,EAAKvB,SAAWuB,KAFzC,gBAMJ,kBAAC,IAAD,CAAQxD,KAAK,SAAS+B,MAAM,SAAS2B,MAAM,WAA3C,iB,GA9FPC,a,QC2CNC,MA/Cf,SAAgBzC,GACZ,OACA,yBAAKmB,UAAU,UACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,2BACX,qCACA,wBAAIA,UAAU,iBACV,4BAAI,kBAACuB,EAAA,EAAD,CAAMb,GAAG,SAAT,SACJ,4BAAI,kBAACa,EAAA,EAAD,CAAMb,GAAG,YAAT,aACJ,4BAAI,kBAACa,EAAA,EAAD,CAAMb,GAAG,SAAT,SACJ,4BAAI,kBAACa,EAAA,EAAD,CAAMb,GAAG,cAAT,iBAGZ,yBAAKV,UAAU,kBACX,2CACA,6DACqB,6BADrB,2BAEoB,6BAFpB,YAGK,6BACT,uBAAGA,UAAU,sBAJT,mBAIiD,6BACrD,uBAAGA,UAAU,oBALT,mBAK+C,6BACnD,uBAAGA,UAAU,yBANT,KAMsC,uBAAGE,KAAK,6BAAR,wBAI1C,yBAAKF,UAAU,qCACX,yBAAKA,UAAU,eACX,uBAAGA,UAAU,iCAAiCE,KAAK,uBAAsB,uBAAGF,UAAU,uBACtF,uBAAGA,UAAU,mCAAmCE,KAAK,2CAA0C,uBAAGF,UAAU,oBAC5G,uBAAGA,UAAU,mCAAmCE,KAAK,+BAA8B,uBAAGF,UAAU,oBAChG,uBAAGA,UAAU,kCAAkCE,KAAK,uBAAsB,uBAAGF,UAAU,mBACvF,uBAAGA,UAAU,iCAAiCE,KAAK,uBAAsB,uBAAGF,UAAU,mBACtF,uBAAGA,UAAU,sBAAsBE,KAAK,WAAU,uBAAGF,UAAU,yBAI3E,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,YACX,6ECvCPwB,EAAU,WACnB,OACI,yBAAKxB,UAAU,UACX,0BAAMA,UAAU,oDAChB,8CCNCyB,EAAU,yB,QCOtB,SAASC,EAAT,GAAgD,IAA3BC,EAA0B,EAA1BA,KAAMrE,EAAoB,EAApBA,UAAWC,EAAS,EAATA,QACnC,OAAID,EAGQ,kBAAC,EAAD,MAGHC,EAEG,4BAAKA,GAMT,kBAAC,gBAAD,CACIqE,IAAE,EACFC,eAAgB,CACZC,cAAe,gCAEnB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAS3B,IAAKsB,EAAUE,EAAKI,MAAOzB,IAAKqB,EAAKX,OAC9C,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAYW,EAAKK,OAChBL,EAAKM,YAAc,kBAAC,IAAD,KAAeN,EAAKM,aAA4B,KACpE,kBAAC,IAAD,KAAWN,EAAKO,gBA8BzBC,MAtBf,SAActD,GAEV,OACE,yBAAKmB,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,qBACT,kBAAC0B,EAAD,CAAYC,KAAM9C,EAAMuD,KACxB9E,UAAWuB,EAAMwD,cAAe9E,QAASsB,EAAMyD,iBAGrD,yBAAKtC,UAAU,qBACT,kBAAC0B,EAAD,CAAYC,KAAM9C,EAAM0D,UAAWjF,UAAWuB,EAAM2D,aAAcjF,QAASsB,EAAM4D,gBAGvF,yBAAKzC,UAAU,qBACT,kBAAC0B,EAAD,CAAYC,KAAM9C,EAAM6D,OAAQpF,UAAWuB,EAAM8D,cAAepF,QAASsB,EAAM+D,oBChDnG,SAASC,EAAT,GAAgC,IAATH,EAAQ,EAARA,OACnB,OACQ,kBAAC,OAAD,CAAMd,IAAE,GACJ,yBAAKkB,IAAKJ,EAAO3B,GAAIf,UAAU,OAC3B,kBAAC,IAAD,CAAO+C,IAAI,MACP,kBAAC,IAAD,CAAOC,MAAI,EAACC,KAAG,GACX,kBAAC,IAAD,CAAOC,QAAM,EAAC/C,IAAKsB,EAAQiB,EAAOX,MAAOzB,IAAKoC,EAAO1B,QAEzD,kBAAC,IAAD,CAAOmC,MAAI,EAACnD,UAAU,QAClB,kBAAC,IAAD,CAAOoD,SAAO,GAAEV,EAAO1B,MACvB,2BAAI0B,EAAOT,aACX,2BAAIS,EAAOR,iBAOvC,SAAShE,EAAT,GAAiD,IAA/BC,EAA8B,EAA9BA,QAASb,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,QAClC,GAAGD,EACD,OACE,kBAAC,EAAD,MAGC,GAAIC,EACL,OACA,4BAAKA,GAKL,IAAM8F,EAAclF,EAAQmF,KAAI,SAACZ,GAC7B,OACI,kBAACG,EAAD,CAAcH,OAAQA,EAAQI,IAAKJ,EAAO3B,QAG/C,OAAS,kBAAC,IAAMwC,SAAP,KACJ,yBAAKvD,UAAU,UACX,qDAEJ,yBAAKA,UAAU,UACX,kBAAC,IAAD,CAAOwD,MAAI,GACP,kBAAC,UAAD,CAAS5B,IAAE,GACNyB,MAqEdI,MA5Df,SAAe5E,GAGX,OACI,yBAAKmB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAgB,kBAACuB,EAAA,EAAD,CAAMb,GAAG,SAAT,SAChB,kBAAC,IAAD,CAAgBgD,QAAM,GAAtB,aAEJ,yBAAK1D,UAAU,UACX,wCACA,+BAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,mBACX,2CACA,waACA,6EAAkD,8CAAlD,iIAEJ,yBAAKA,UAAU,mBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAYA,UAAU,yBAAtB,qBACA,kBAAC,IAAD,KACI,wBAAIA,UAAU,WACV,wBAAIA,UAAU,SAAd,WACA,wBAAIA,UAAU,SAAd,eACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,wBACA,wBAAIA,UAAU,SAAd,cACA,wBAAIA,UAAU,SAAd,aACA,wBAAIA,UAAU,SAAd,UAKhB,yBAAKA,UAAU,UACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUA,UAAU,YAChB,gCAAYA,UAAU,cAClB,uBAAGA,UAAU,QAAb,qFAEA,4BAAQA,UAAU,qBAAlB,cACA,0BAAMgC,MAAM,gBAAZ,0EAQpB,yBAAKhC,UAAU,mBACX,kBAAC,EAAD,CAAS7B,QAASU,EAAMV,QAAQA,QAASb,UAAWuB,EAAMV,QAAQb,UAAWC,QAASsB,EAAMV,QAAQZ,aCzGhH,SAASoG,EAAT,GAAkC,IAARvB,EAAO,EAAPA,KACtB,OACI,kBAAC,IAAD,KACI,kBAACb,EAAA,EAAD,CAAMb,GAAE,gBAAW0B,EAAKrB,KACpB,kBAAC,IAAD,CAASV,MAAM,OAAOF,IAAKsB,EAAUW,EAAKL,MAAOzB,IAAK8B,EAAKpB,OAC3D,kBAAC,IAAD,KACA,kBAAC,IAAD,KAAYoB,EAAKpB,SAOjC,IAsDW4C,EAtDE,SAAC/E,GAEV,IAAMgF,EAAOhF,EAAMrB,OAAOA,OAAO8F,KAAI,SAAClB,GAClC,OACI,yBAAKpC,UAAU,sBAAuB8C,IAAKV,EAAKrB,IAC5C,kBAAC4C,EAAD,CAAgBvB,KAAMA,QAKlC,OAAIvD,EAAMrB,OAAOF,UAET,yBAAK0C,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKPnB,EAAMrB,OAAOD,QAEd,yBAAKyC,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,4BAAKnB,EAAMrB,OAAOD,YAQ9B,yBAAKyC,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAACuB,EAAA,EAAD,CAAMb,GAAG,SAAT,SAEJ,kBAAC,IAAD,CAAgBgD,QAAM,GAAtB,SAIJ,yBAAK1D,UAAU,UACX,oCACA,+BAGR,yBAAKA,UAAU,OACV6D,KC9DnBC,EAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IACvDC,EAAY,SAACD,GAAD,OAAS,SAACH,GAAD,OAASA,GAAQA,EAAIC,QAAUE,IACpDE,EAAW,SAACL,GAAD,OAAUM,MAAMC,OAAOP,KAClCQ,EAAa,SAACR,GAAD,MAAS,4CAA4CS,KAAKT,IA2L9DU,E,kDAzLP,WAAY5F,GAAO,IAAD,8BACd,cAAMA,IACD6F,aAAe,EAAKA,aAAa3F,KAAlB,gBAFN,E,yDAIL4F,GACTvF,KAAKP,MAAM+F,aAAaD,GACxBvF,KAAKP,MAAMgG,sB,+BAEV,IAAD,OACJ,OACI,yBAAK7E,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAgB,kBAACuB,EAAA,EAAD,CAAMb,GAAG,SAAT,SAChB,kBAAC,IAAD,CAAgBgD,QAAM,GAAtB,eAEJ,yBAAK1D,UAAU,UACX,0CACA,+BAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,UACf,qDAEA,yBAAKA,UAAU,+BACP,2CACA,6DACyB,6BADzB,2BAEwB,6BAFxB,YAGS,6BACT,uBAAGA,UAAU,gBAJb,mBAI+C,6BAC/C,uBAAGA,UAAU,cALb,mBAK6C,6BAC7C,uBAAGA,UAAU,mBANb,KAMoC,uBAAGE,KAAK,6BAAR,wBAG5C,yBAAKF,UAAU,+BACX,oDAEJ,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,YAAY8E,KAAK,SAC5B,uBAAGA,KAAK,SAAS9E,UAAU,kBAAkBE,KAAK,KAAI,uBAAGF,UAAU,gBAAnE,SACA,uBAAG8E,KAAK,SAAS9E,UAAU,eAAeE,KAAK,KAAI,uBAAGF,UAAU,gBAAhE,UACA,uBAAG8E,KAAK,SAAS9E,UAAU,kBAAkBE,KAAK,KAAI,uBAAGF,UAAU,qBAAnE,aAKZ,yBAAKA,UAAU,mBACZ,yBAAKA,UAAU,UACZ,sDAEF,yBAAKA,UAAU,mBACf,kBAAC,OAAD,CAAM+E,MAAM,WAAWlE,SAAU,SAAC8D,GAAD,OAAY,EAAKD,aAAaC,KAC/D,kBAAC,IAAD,CAAK3E,UAAU,cACH,kBAAC,IAAD,CAAOc,QAAQ,YAAYkE,GAAI,GAA/B,cACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQC,KAAT,CAAcF,MAAM,aAAahE,GAAG,YAAYC,KAAK,YACjDkE,YAAY,aACZlF,UAAU,eACVmF,WAAY,CACRrB,WAAUK,UAAWA,EAAU,GAAIF,UAAWA,EAAU,OAGhE,kBAAC,SAAD,CACIjE,UAAU,cACV+E,MAAM,aACNK,KAAK,UACLC,SAAU,CACNvB,SAAU,WACVK,UAAW,oCACXF,UAAW,qCAK3B,kBAAC,IAAD,CAAKjE,UAAU,cACX,kBAAC,IAAD,CAAOc,QAAQ,WAAWkE,GAAI,GAA9B,aACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQC,KAAT,CAAcF,MAAM,YAAYhE,GAAG,WAAWC,KAAK,WAC/CkE,YAAY,YACZlF,UAAU,eACVmF,WAAY,CACRrB,WAAUK,UAAWA,EAAU,GAAIF,UAAWA,EAAU,OAGhE,kBAAC,SAAD,CACIjE,UAAU,cACV+E,MAAM,YACNK,KAAK,UACLC,SAAU,CACNvB,SAAU,WACVK,UAAW,oCACXF,UAAW,qCAK3B,kBAAC,IAAD,CAAKjE,UAAU,cACX,kBAAC,IAAD,CAAOc,QAAQ,SAASkE,GAAI,GAA5B,gBACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQC,KAAT,CAAcF,MAAM,UAAUhE,GAAG,SAASC,KAAK,SAC3CkE,YAAY,cACZlF,UAAU,eACVmF,WAAY,CACRrB,WAAUK,UAAWA,EAAU,GAAIF,UAAWA,EAAU,IAAKG,cAGrE,kBAAC,SAAD,CACIpE,UAAU,cACV+E,MAAM,UACNK,KAAK,UACLC,SAAU,CACNvB,SAAU,WACVK,UAAW,iCACXF,UAAW,6BACXG,SAAU,wBAK1B,kBAAC,IAAD,CAAKpE,UAAU,cACX,kBAAC,IAAD,CAAOc,QAAQ,QAAQkE,GAAI,GAA3B,SACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQC,KAAT,CAAcF,MAAM,SAAShE,GAAG,QAAQC,KAAK,QACzCkE,YAAY,QACZlF,UAAU,eACVmF,WAAY,CACRrB,WAAUS,gBAGlB,kBAAC,SAAD,CACIvE,UAAU,cACV+E,MAAM,SACNK,KAAK,UACLC,SAAU,CACNvB,SAAU,WACVS,WAAY,6BAK5B,kBAAC,IAAD,CAAKvE,UAAU,cACX,kBAAC,IAAD,CAAKgF,GAAI,CAACM,KAAM,EAAGC,OAAQ,IACvB,yBAAKvF,UAAU,cACX,kBAAC,IAAD,CAAOmB,OAAK,GACR,kBAAC,UAAQqE,SAAT,CAAkBT,MAAM,SAAS/D,KAAK,QAClChB,UAAU,qBAFlB,IAGa,IACL,0DAIhB,kBAAC,IAAD,CAAKgF,GAAI,CAACM,KAAM,EAAGC,OAAQ,IACvB,kBAAC,UAAQE,OAAT,CAAgBV,MAAM,eAAe/D,KAAK,cACtChB,UAAU,gBACV,wCACA,4CAIZ,kBAAC,IAAD,CAAKA,UAAU,cACX,kBAAC,IAAD,CAAOc,QAAQ,UAAUkE,GAAI,GAA7B,iBACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQU,SAAT,CAAkBX,MAAM,WAAWhE,GAAG,UAAUC,KAAK,UACjD2E,KAAK,KACL3F,UAAU,mBAGtB,kBAAC,IAAD,CAAKA,UAAU,cACX,kBAAC,IAAD,CAAKgF,GAAI,CAACM,KAAK,GAAIC,OAAQ,IACvB,kBAAC,IAAD,CAAQ7H,KAAK,SAAS0D,MAAM,WAA5B,2B,GA5KdC,aCHlB,SAASuE,EAAT,GAA4B,IAAPxD,EAAM,EAANA,KAErB,OACQ,yBAAKpC,UAAU,uBACX,kBAAC,gBAAD,CACA4B,IAAE,EACFC,eAAgB,CACZC,cAAe,gCAEnB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASmB,KAAG,EAAC9C,IAAKsB,EAAUW,EAAKL,MAAOzB,IAAK8B,EAAKpB,OAClD,kBAAC,IAAD,KACA,kBAAC,IAAD,KAAYoB,EAAKpB,MACjB,kBAAC,IAAD,KAAWoB,EAAKF,iBAQhC,SAAS2D,EAAT,GAAuD,IAA9BhI,EAA6B,EAA7BA,SAASiI,EAAoB,EAApBA,YAAYC,EAAQ,EAARA,OAEhCC,EAAYnI,EAASyF,KAAI,SAACxF,GAE5B,IACImI,EAAK,IAAIC,KAAKA,KAAKC,MAAMrI,EAAQmI,OAGrC,OAFAG,QAAQC,MAGJ,kBAAC,OAAD,CAAMzE,IAAE,GACR,wBAAIkB,IAAKhF,EAAQiD,GAAGuF,YAChB,2BAAIxI,EAAQA,SACZ,iCAAOA,EAAQyI,OAAf,MAA0B,IAAIC,KAAKC,eAAe,QAR5C,CAAEC,KAAM,UAAWC,MAAO,QAASC,IAAK,YAQsBC,OAAOZ,SAM3F,OACI,yBAAKjG,UAAU,uBACX,wCACA,wBAAIA,UAAU,iBACV,kBAAC,UAAD,CAAS4B,IAAE,GACVoE,IAIL,kBAAC,GAAD,CAAaD,OAAQA,EAAQD,YAAaA,KAM1D,IAqDegB,EArDM,SAACjI,GAClB,OAAIA,EAAMvB,UAEF,yBAAK0C,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKPnB,EAAMtB,QAEP,yBAAKyC,UAAU,aACX,yBAAKA,UAAU,OACX,4BAAKnB,EAAMtB,WAKR,MAAZsB,EAAMuD,KAET,yBAAKpC,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAACuB,EAAA,EAAD,CAAMb,GAAG,SAAT,SAEJ,kBAAC,IAAD,CAAgBgD,QAAM,GACjB7E,EAAMuD,KAAKpB,OAGpB,yBAAKhB,UAAU,UACP,4BAAKnB,EAAMuD,KAAKpB,MAChB,+BAGZ,yBAAKhB,UAAU,OACf,kBAAC4F,EAAD,CAAYxD,KAAMvD,EAAMuD,OACxB,kBAACyD,EAAD,CAAgBhI,SAAUgB,EAAMhB,SAC/BiI,YAAajH,EAAMiH,YACnBC,OAAQlH,EAAMuD,KAAKrB,OAOpB,+BAON+C,GAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,GAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IAEvD6C,G,kDACF,WAAYlI,GAAQ,IAAD,8BACf,cAAMA,IAMVK,YAAY,WACR,EAAKG,SAAS,CACVJ,aAAc,EAAK5B,MAAM4B,eAP7B,EAAK5B,MAAQ,CACX4B,aAAY,GAHC,E,yDAYJ0F,GACXvF,KAAKF,cACLE,KAAKP,MAAMiH,YAAY1G,KAAKP,MAAMkH,OAAQpB,EAAOqC,OAAQrC,EAAO4B,OAAQ5B,EAAO7G,W,+BAEvE,IAlBGoG,EAkBJ,OACP,OACI,kBAAC,IAAMX,SAAP,KACA,kBAAC,IAAD,CAAQ5C,SAAO,EAACV,QAASb,KAAKF,aAAa,0BAAMc,UAAU,uBAA3D,mBACA,kBAAC,IAAD,CAAOO,OAAQnB,KAAK/B,MAAM4B,YAAa2B,OAAQxB,KAAKF,aAC5C,kBAAC,IAAD,CAAa0B,OAAQxB,KAAKF,aAA1B,kBACA,kBAAC,IAAD,KACA,kBAAC,YAAD,CAAWc,UAAU,YAAYa,SAAU,SAAC8D,GAAD,OAAY,EAAKD,aAAaC,KACzE,kBAAC,IAAD,CAAK3E,UAAU,cACH,kBAAC,IAAD,CAAOc,QAAQ,UAAf,UACI,kBAAC,UAAQ2E,OAAT,CAAgBV,MAAM,UAAU/D,KAAK,SACjChB,UAAU,gBACV,qCACA,qCACA,qCACA,qCACA,uCAGpB,kBAAC,IAAD,CAAKA,UAAU,cACH,kBAAC,IAAD,CAAOc,QAAQ,QAAf,aACI,kBAAC,UAAQmE,KAAT,CAAcF,MAAM,UAAUhE,GAAG,SAASC,KAAK,SAC3CkE,YAAY,YACZlF,UAAU,eACVmF,WAAY,CACRrB,YAAUK,WA3CnCD,EA2CwD,EA3ChD,SAACH,GAAD,OAASA,GAAQA,EAAIC,QAAUE,IA2CqBD,UAAWA,GAAU,OAGhE,kBAAC,SAAD,CACIjE,UAAU,cACV+E,MAAM,UACNK,KAAK,UACLC,SAAU,CACNvB,SAAU,WACVK,UAAW,oCACXF,UAAW,oCAI3B,kBAAC,IAAD,CAAKjE,UAAU,cACX,kBAAC,IAAD,CAAOc,QAAQ,WAAf,WACI,kBAAC,UAAQ4E,SAAT,CAAkBX,MAAM,WAAWhE,GAAG,UAAUC,KAAK,UACjD2E,KAAK,IACL3F,UAAU,kBAEd,kBAAC,IAAD,CAAQtC,KAAK,SAAS0D,MAAM,WAA5B,kB,GA9DVC,aCxDbgB,GAAgB,iBAAO,CAChC3E,KdhEwB,mBcmEfuJ,GAAe,SAAC1J,GAAD,MAAc,CACtCG,KdnEuB,gBcoEvBC,QAASJ,IAEA2J,GAAW,SAAC1J,GAAD,MAAa,CACjCE,KdtEoB,acuEpBC,QAASH,IAuBA2J,GAAiB,SAACC,GAAD,MAAc,CACxC1J,Kd7F2B,kBc8F3BC,QAASyJ,IAGAC,GAAc,SAACxJ,GAAD,MAAe,CACtCH,KdnGwB,ecoGxBC,QAASE,IAyBAyJ,GAAgB,iBAAO,CAChC5J,Kd5H0B,mBc+HjB6J,GAAe,SAACH,GAAD,MAAc,CACtC1J,Kd9HyB,gBc+HzBC,QAASyJ,IAGAI,GAAY,SAACC,GAAD,MAAa,CAClC/J,KdpIsB,acqItBC,QAAS8J,IA0BAC,GAAiB,iBAAO,CACjChK,Kd9J2B,oBciKlBiK,GAAgB,SAACP,GAAD,MAAc,CACvC1J,KdhK0B,iBciK1BC,QAASyJ,IAGAQ,GAAa,SAACzJ,GAAD,MAAc,CACpCT,KdtKuB,ccuKvBC,QAASQ,I,SC/IP0J,G,kLAGAzI,KAAKP,MAAMiJ,cACX1I,KAAKP,MAAMkJ,gBACX3I,KAAKP,MAAMmJ,cACX5I,KAAKP,MAAMoJ,iB,+BAEN,IAAD,OA8BR,OACE,6BACI,kBAAC,EAAD,MACA,kBAAC,mBAAD,KACI,kBAAC,iBAAD,CAAenF,IAAK1D,KAAKP,MAAMqJ,SAASpF,IAAKqF,WAAW,OAAOC,QAAS,KACtE,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAhCd,WACZ,OACE,kBAAC,EAAD,CACApG,KAAM,EAAKvD,MAAMrB,OAAOA,OAAOiL,QAAO,SAACrG,GAAD,OAAUA,EAAKsG,YAAU,GAC/DrG,cAAe,EAAKxD,MAAMrB,OAAOF,UACjCqL,YAAa,EAAK9J,MAAMrB,OAAOD,QAC/BgF,UAAW,EAAK1D,MAAMZ,WAAWA,WAAWwK,QAAO,SAACG,GAAD,OAAWA,EAAMF,YAAU,GAC9ElG,aAAc,EAAK3D,MAAMZ,WAAWX,UACpCmF,aAAc,EAAK5D,MAAMZ,WAAWV,QACpCmF,OAAQ,EAAK7D,MAAMV,QAAQA,QAAQsK,QAAO,SAAC/F,GAAD,OAAYA,EAAOgG,YAAU,GACvE/F,cAAe,EAAK9D,MAAMV,QAAQb,UAClCsF,cAAe,EAAK/D,MAAMV,QAAQZ,aAsB9B,kBAAC+K,EAAA,EAAD,CAAOC,KAAK,WAAWC,UAAW,kBAAI,kBAAC,EAAD,CAAOrK,QAAS,EAAKU,MAAMV,aACjE,kBAACmK,EAAA,EAAD,CAAOO,OAAK,EAACN,KAAK,QAAQC,UAAW,kBAAI,kBAAC,EAAD,CAAMhL,OAAQ,EAAKqB,MAAMrB,YAClE,kBAAC8K,EAAA,EAAD,CAAOC,KAAK,gBAAgBC,UApBnB,SAAC,GAAa,IAAZM,EAAW,EAAXA,MACjB,OACE,kBAAC,EAAD,CAAc1G,KAAM,EAAKvD,MAAMrB,OAAOA,OAAOiL,QAAO,SAACrG,GAAD,OAAUA,EAAKrB,KAAOgI,SAASD,EAAME,OAAOjD,OAAO,OAAK,GAC5GzI,UAAW,EAAKuB,MAAMrB,OAAOF,UAC7BC,QAAS,EAAKsB,MAAMrB,OAAOD,QAC3BM,SAAU,EAAKgB,MAAMhB,SAASA,SAAS4K,QAAO,SAAC3K,GAAD,OAAaA,EAAQiI,SAAWgD,SAASD,EAAME,OAAOjD,OAAO,OAC3GkD,gBAAiB,EAAKpK,MAAMhB,SAASN,QACrCuI,YAAa,EAAKjH,MAAMiH,iBAcpB,kBAACwC,EAAA,EAAD,CAAOO,OAAK,EAACN,KAAK,aAAaC,UAAW,kBAAM,kBAAC,EAAD,CAAS3D,kBAAmB,EAAKhG,MAAMgG,kBAAmBD,aAAc,EAAK/F,MAAM+F,kBACnI,kBAACsE,EAAA,EAAD,CAAUxI,GAAG,aAInB,kBAAC,EAAD,W,GArDWW,aA0DJ8H,eAAWC,mBA7EF,SAAA/L,GACtB,MAAO,CACLG,OAAQH,EAAMG,OACdK,SAAUR,EAAMQ,SAChBI,WAAYZ,EAAMY,WAClBE,QAASd,EAAMc,YAGQ,SAAAkL,GAAQ,MAAK,CACtCvD,YAAa,SAACC,EAAQiB,EAAQT,EAAQzI,GAAzB,OAAqCuL,EDhBzB,SAACtD,EAAQiB,EAAQT,EAAQzI,GAAzB,OAAqC,SAACuL,GAE7D,IAAMC,EAAa,CACfvD,OAAQA,EACRiB,OAAQA,EACRT,OAAQA,EACRzI,QAASA,GAIb,OAFAwL,EAAWrD,MAAO,IAAIC,MAAOqD,cAEtBC,MAAM/H,EAAU,WAAY,CAC/BgI,OAAQ,OACRtG,KAAMuG,KAAKC,UAAUL,GACrBM,QAAS,CACP,eAAgB,oBAElBC,YAAa,gBAEhBC,MAAK,SAAAC,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GACM,MAAMA,KAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GAAQ,OAAIV,EApCI,SAACvL,GAAD,MAAc,CACpCJ,KdJsB,ccKtBC,QAASG,GAkCkBwM,CAAWP,OACrCQ,OAAM,SAAAN,GAAY7D,QAAQC,IAAI,gBAAiB4D,EAAMtL,SAAUY,MAAM,4CAA4C0K,EAAMtL,aChB/DmH,CAAYC,EAAQiB,EAAQT,EAAQzI,KAC/FgK,YAAa,WAAQuB,GDkBU,SAACA,GAE9B,OADAA,EAAShH,IAAc,IAChBmH,MAAM/H,EAAU,UACtBqI,MAAK,SAAAC,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEM,MADc,IAAIC,MAAMD,EAAMtL,YAGrCmL,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAtM,GAAM,OAAI6L,EAASnC,GAAU1J,OAClC+M,OAAM,SAAAN,GAAK,OAAIZ,EAASpC,GAAagD,EAAMtL,iBCnC9CkG,kBAAmB,WAAQwE,EAASmB,UAAQC,MAAM,cAClD1C,cAAe,kBAAMsB,GDkDY,SAACA,GAChC,OAAOG,MAAM/H,EAAU,YACtBqI,MAAK,SAAAC,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEM,MADc,IAAIC,MAAMD,EAAMtL,YAGrCmL,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAjM,GAAQ,OAAIwL,EAAShC,GAAYxJ,OACtC0M,OAAM,SAAAN,GAAK,OAAIZ,EAASlC,GAAe8C,EAAMtL,iBClEhDqJ,YAAa,kBAAMqB,GD+EY,SAACA,GAG9B,OAFAA,EAAS/B,MAEFkC,MAAM/H,EAAU,cACtBqI,MAAK,SAAAC,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEM,MADc,IAAIC,MAAMD,EAAMtL,YAGrCmL,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAArC,GAAM,OAAI4B,EAAS7B,GAAUC,OAClC8C,OAAM,SAAAN,GAAK,OAAIZ,EAAS9B,GAAa0C,EAAMtL,iBCjG9CsJ,aAAc,kBAAMoB,GDmHY,SAACA,GAG/B,OAFAA,EAAS3B,MAEF8B,MAAM/H,EAAU,WACtBqI,MAAK,SAAAC,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEM,MADc,IAAIC,MAAMD,EAAMtL,YAGrCmL,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAA3L,GAAO,OAAIkL,EAASzB,GAAWzJ,OACpCoM,OAAM,SAAAN,GAAK,OAAIZ,EAAS1B,GAAcsC,EAAMtL,iBCrI/CiG,aAAc,SAAC8F,GAAD,OAAcrB,EDsJF,SAACqB,GAAD,OAAc,SAACrB,GAExC,OAAOG,MAAM/H,EAAQ,WAAY,CAChCgI,OAAQ,OACRtG,KAAMuG,KAAKC,UAAUe,GACrBd,QAAS,CACP,eAAgB,oBAElBC,YAAa,gBAGbC,MAAK,SAAAC,GACJ,GAAGA,EAASC,GACZ,OAAOD,EAEN,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEM,MADc,IAAIC,MAAMD,EAAMtL,YAGlCmL,MAAK,SAAAC,GAAQ,OAAEA,EAASM,UACxBP,MAAK,SAAAY,GAAanL,MAAM,+BAAgCmK,KAAKC,UAAUe,IACtEtE,QAAQC,IAAIqE,MACbH,OAAM,SAAAN,GACN7D,QAAQC,IAAI,iBAAkB4D,EAAMtL,SACpCY,MAAM,6CAA6C0K,EAAMtL,aCnLtBiG,CAAa8F,QA8D1BtB,CAA6CvB,KCrFjE8C,I,OCKYC,sBACVC,0BAAgB,aACZrN,OAAQJ,EACRS,SAAUD,EACVK,WAAYD,EACZG,QAASD,GACN4M,sBAAY,CACXJ,SAAUtM,MAEf2M,0BAAgBC,IAAOC,ODGnBC,G,uKAZb,OACE,kBAAC,WAAD,CAAUP,MAAOA,IACf,kBAACQ,EAAA,EAAD,KACE,6BACE,kBAAC,GAAD,a,GAPQ9J,aEGE+J,QACW,cAA7BC,OAAOnD,SAASoD,UAEe,UAA7BD,OAAOnD,SAASoD,UAEhBD,OAAOnD,SAASoD,SAASxC,MACvB,2DCRNyC,IAASC,OAEL,kBAAC,GAAD,MAEFC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/B,MAAK,SAAAgC,GACJA,EAAaC,gBAEdxB,OAAM,SAAAN,GACL7D,QAAQ6D,MAAMA,EAAMtL,a","file":"static/js/main.81d53d6a.chunk.js","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n    isLoading : true,\r\n    errMess : null,\r\n    dishes : [] }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES :\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload }\r\n        case ActionTypes.DISHES_LOADING :\r\n            return {...state, isLoading: true, errMess: null, dishes: [] }\r\n        case ActionTypes.DISHES_FAILED :\r\n            return {...state, isLoading: false, errMess: action.payload}\r\n        default:\r\n          return state;\r\n      }\r\n};","export const ADD_COMMENT ='ADD_COMMENT';\r\nexport const DISHES_LOADING='DISHES_LOADING';\r\nexport const DISHES_FAILED='DISHES_FAILED';\r\nexport const ADD_DISHES='ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:   \r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []};\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React,{Component} from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.state = {\r\n          isNavOpen: false,\r\n          isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n      toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n      handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n            <Navbar dark expand=\"md\">\r\n                <div className=\"container\">\r\n                    <NavbarToggler onClick={this.toggleNav} />\r\n                    <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                        <Nav navbar>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                        </NavItem>\r\n                        </Nav>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem>\r\n                                <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        \r\n                    </Collapse>\r\n                </div>\r\n                        \r\n            </Navbar>\r\n            <Jumbotron>\r\n                <div className=\"container\">\r\n                    <div className=\"row row-header\">\r\n                        <div className=\"col-12 col-sm-6\">\r\n                            <h1>Ristorante con Fusion</h1>\r\n                            <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Jumbotron>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    \r\n                    </ModalBody>\r\n                </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\n function RenderCard({item, isLoading, errMess}){\r\n    if (isLoading) {\r\n        \r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else{\r\n        // console.log(isLoading);\r\n        return(\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.title}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle>:null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n                \r\n        );}\r\n }\r\n\r\nfunction Home(props) {\r\n    // console.log(props.leaders,props.isLoading);\r\n    return(\r\n      <div className=\"container\">\r\n          <div className=\"row\">\r\n              <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish}\r\n                    isLoading={props.dishesLoading} errMess={props.dishesErrMess}\r\n                    />\r\n              </div>\r\n              <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n              </div>\r\n            \r\n              <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess}/>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Home; ","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {Loading} from './LoadingComponent';\r\nimport {baseUrl}  from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader({leader}){\r\n    return (\r\n            <Fade in>\r\n                <div key={leader.id} className=\"row\">\r\n                    <Media tag=\"li\">\r\n                        <Media left top >\r\n                            <Media object src={baseUrl+leader.image} alt={leader.name}/>\r\n                        </Media>\r\n                        <Media body className=\"ml-5\">\r\n                            <Media heading>{leader.name}</Media>\r\n                            <p>{leader.designation}</p>\r\n                            <p>{leader.description}</p>\r\n                        </Media>\r\n                    </Media>\r\n                </div>\r\n            </Fade>\r\n    );\r\n}\r\nfunction Leaders({leaders, isLoading, errMess }){ \r\n    if(isLoading){\r\n      return (\r\n        <Loading/>\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return (\r\n        <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else{\r\n    // console.log(leaders);\r\n        const leaderslist = leaders.map((leader) => {\r\n            return (\r\n                <RenderLeader leader={leader} key={leader.id}/> );\r\n                  }); \r\n\r\n           return ( <React.Fragment>\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        <Stagger in>\r\n                            {leaderslist}\r\n                        </Stagger>\r\n                    </Media>\r\n                </div>\r\n            </React.Fragment>);\r\n        }\r\n    \r\n}\r\n\r\nfunction About(props) {\r\n    \r\n       \r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <Leaders leaders={props.leaders.leaders} isLoading={props.leaders.isLoading} errMess={props.leaders.errMess} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay,CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link} from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\n\r\n    function RenderMenuItem ({dish}) {\r\n        return (\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`}>                    \r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\r\n                    <RenderMenuItem dish={dish}/>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>\r\n                                <Link to=\"/home\">Home</Link>\r\n                            </BreadcrumbItem>\r\n                            <BreadcrumbItem active>\r\n                                Menu\r\n                            </BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>      \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nclass Contact extends Component{\r\n        constructor(props){\r\n            super(props);\r\n            this.handleSubmit = this.handleSubmit.bind(this);\r\n        }\r\n        handleSubmit(values) {\r\n            this.props.postFeedback(values);\r\n            this.props.resetFeedbackForm();\r\n        }\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"/\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"/\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"/\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                    <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n\r\n                    </div>\r\n               </div>   \r\n            </div>\r\n        );\r\n    }  \r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport { Card, CardImg,CardBody,CardText,CardTitle,Breadcrumb,BreadcrumbItem, Button, Row, Label,Modal, ModalHeader, ModalBody} from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n// import {ListGroup,ListGroupItem,ListGroupItemHeading, ListGroupItemText} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n    function RenderDish({dish}){\r\n        \r\n    return(\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n                \r\n            </div>\r\n    );\r\n    }\r\n    function RenderComments({comments,postComment,dishId}){\r\n            \r\n            const commentlist=comments.map((comment)=>{\r\n\r\n                var options = { year: 'numeric', month: 'short', day: 'numeric' };\r\n                var date=new Date(Date.parse(comment.date));\r\n                console.log();\r\n\r\n                return(\r\n                    <Fade in>\r\n                    <li key={comment.id.toString()}>\r\n                        <p>{comment.comment}</p>\r\n                        <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', options).format(date)}</p>\r\n                    </li>\r\n                    </Fade>\r\n                )\r\n            }); \r\n\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    <Stagger in>\r\n                    {commentlist}\r\n                    </Stagger>\r\n                    \r\n                </ul>\r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n            </div>\r\n                \r\n        );\r\n    }\r\n\r\nconst DishDetailed = (props) =>{\r\n    if (props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n   else if(props.dish!=null){\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem>\r\n                        <Link to='/menu'>Menu</Link>\r\n                    </BreadcrumbItem>\r\n                    <BreadcrumbItem active>\r\n                        {props.dish.name}\r\n                    </BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>    \r\n            </div>\r\n            <div className=\"row\">\r\n            <RenderDish dish={props.dish}/>\r\n            <RenderComments comments={props.comments}\r\n             postComment={props.postComment}\r\n             dishId={props.dish.id}\r\n            />\r\n            </div>    \r\n        </div>\r\n    );}\r\n    else \r\n        return(\r\n            <div></div>\r\n        );\r\n    \r\n}\r\n\r\n\r\nexport default DishDetailed;\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          isModalOpen:false\r\n        };\r\n\r\n      }\r\n    toggleModal=()=>{\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n          });\r\n      }\r\n      handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n      render() {\r\n        return (\r\n            <React.Fragment>\r\n            <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal} >\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                    <LocalForm className=\"container\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                    <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\">Rating</Label>\r\n                                    <Control.select model=\".rating\" name=\"Rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                            </Row>\r\n                    <Row className=\"form-group\">\r\n                                <Label htmlFor=\"name\">Your Name</Label>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                            />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                        />\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"Comment\">Comment</Label>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                            </Row>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Submit\r\n                                    </Button>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n                </React.Fragment>\r\n        )\r\n      }\r\n    }","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n}\r\n);\r\nexport const dishesFailed = (errMess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errMess\r\n}); \r\nexport const addDishes =(dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments))) \r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const postFeedback = (feedback) => (dispatch) => {\r\n    // console.log(\"postfeddback\" + JSON.stringify(feedback));\r\n   return fetch(baseUrl+'feedback', {\r\n    method: \"POST\",\r\n    body: JSON.stringify(feedback),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    credentials: \"same-origin\"\r\n}\r\n   )\r\n   .then(response => {\r\n     if(response.ok)\r\n     return response;\r\n     else {\r\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n      error.response = response;\r\n      throw error;\r\n    }\r\n  },\r\n  error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n  })\r\n   .then(response=>response.json())\r\n   .then(feedback =>{ alert(\"Thank you for your feedback!\"+ JSON.stringify(feedback));\r\n     console.log(feedback)})\r\n   .catch(error=>{\r\n    console.log('post feedbacks', error.message);\r\n    alert('Your feedback could not be posted\\nError: '+error.message);\r\n   });\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Switch, Route, Redirect,withRouter} from 'react-router-dom';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport About from './AboutComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetailed from './DishDetailedComponent';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from 'react-redux-form';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from './redux/ActionCreaters';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n  postFeedback: (feedback) => dispatch(postFeedback(feedback))\r\n});\r\n\r\n\r\nclass Main extends Component{\r\n  \r\n    componentDidMount() {\r\n      this.props.fetchDishes();\r\n      this.props.fetchComments();\r\n      this.props.fetchPromos();\r\n      this.props.fetchLeaders();\r\n    }\r\n  render(){\r\n    \r\n    // console.log(this.props.leaders);\r\n    // console.log(this.state.dishes.filter((dish)=>dish.Id===this.selectedDish));\r\n    const Homepage= () =>{\r\n        return(\r\n          <Home \r\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishErrMess={this.props.dishes.errMess}\r\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n          leaderLoading={this.props.leaders.isLoading}\r\n          leaderErrMess={this.props.leaders.errMess}\r\n      />  \r\n        );\r\n    }\r\n    const DishWithId = ({match}) => {\r\n        return(\r\n          <DishDetailed dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n        />\r\n        );\r\n      };\r\n  return (\r\n    <div>\r\n        <Header/>\r\n        <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n              <Switch>\r\n              <Route path=\"/home\" component={Homepage}/>\r\n              <Route path='/aboutus' component={()=><About leaders={this.props.leaders} />} />\r\n              <Route exact path=\"/menu\" component={()=><Menu dishes={this.props.dishes}/>}/>\r\n              <Route path='/menu/:dishId' component={DishWithId} />\r\n              <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\r\n              <Redirect to=\"/home\" />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        <Footer/>\r\n    </div>\r\n  );}\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import React, { Component } from 'react';\nimport {BrowserRouter}  from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './components/redux/configureStore';\nimport Main from './components/MainComponent';\nimport './App.css';\n\nconst store = ConfigureStore();\n\nclass App extends Component{\n  \n  render(){\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <div>\n          <Main/>\n        </div>\n      </BrowserRouter>\n    </Provider>\n    \n  );}\n}\n\nexport default App;\n","import {createStore,combineReducers,applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport {Dishes} from './dishesReducer';\r\nimport {Comments} from './commentsReducer';\r\nimport {Promotions} from './promotionsReducer';\r\nimport {Leaders} from './leadersReducer';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}